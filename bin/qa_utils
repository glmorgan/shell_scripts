#!/bin/bash

## Author: Glen Morgan (glen.morgan@outlook.com)
## Date: June 24th, 2014
## Usage: qa_utils [option] arg 
## Desc: Making QA's setup simplier, one shell script at a time.

#Global variables
JIRA_BASE_URL="http://jira.aio-tv.com/browse/"

VAGRANT_URL="http://localhost:8080/"
VAGRANT_QA_PATH="app/Test/"

OUTPUT_FILE="qa.html"
OUTPUT_PATH="aioWebsite/www/app/Test"

GIT_LOG_ENTRIES=3

function usage() {
    echo "Usage: $0"
    echo ""
    echo "Options:"
    echo ""
    echo "   -h, --help     Display this message."
    echo ""
    echo "   -s, --setup    Setup branch info"
    echo "                  Note: View info at [serverlocation]/app/Test/qa.html"
    echo "                  qa_utils -s"
    echo ""
    echo "   -v, --view     View branch info"
    echo "                  qa_utils -v"
    echo ""
    echo ""
}

# Launch the default browser with a supplied URL
function load_url() {
url=$1
    if [ -n "$url" ]
    then
        echo "Launching: $1"
        /usr/bin/open $1
    else
        echo "Missing url!"
    fi
}

function git_last_log() {
    git_log=$(git log -$GIT_LOG_ENTRIES --no-merges)
}

function git_branch_name {
    current_branch=$(git symbolic-ref --short HEAD)
}

function exportAsHTML {
    content_array=("${@}")

    html_output="<html><head><title>QA Info</title></head><body>"
    html_output="$html_output <h3>Current Branch Information</h3><hr>"
    for i in "${content_array[@]}"
    do
        html_output="$html_output<pre>$i</pre>"
    done

    html_output="$html_output<body><html>"

    # ensure output directory exists
    if [ ! -d "$OUTPUT_PATH" ]; then
        echo "Please move to the root folder of the repo and re-execute command."
        exit
    fi

    #Write to file
    echo "$html_output" > "$OUTPUT_PATH/$OUTPUT_FILE"

}

function extract_jira_ticket() {
    jira_ticket=$(echo "$1" | grep -ohiE "DESIGN-[0-9]{0,5}|PROD-[0-9]{0,5}" )

# Convert to uppercase
    jira_ticket=$(echo "$jira_ticket" | tr '[:lower:]' '[:upper:]')
}

#getops parsing
while [[ $# -gt 0 ]]; do
    case $1 in
        -s|--setup)

            # Declare output array
            output=()

            # Determine current git branch
            git_branch_name
            output+=("Branch Name: $current_branch")

            # Determine Jira ticket number
            extract_jira_ticket $current_branch
            if [ -n "$jira_ticket" ]
            then
                output+=("View Jira Ticket: <a href=\"$JIRA_BASE_URL$jira_ticket\" target=\"_blank\">$jira_ticket</a>")
            fi
            
            git_last_log
            output+=("$git_log")

            #Save HTML to file
            exportAsHTML "${output[@]}"

            # Prompt user to view
            read -p "QA branch info saved.  View file? ('y/n'):  " -n 1

            if [[ $REPLY =~ ^[Yy]$ ]]; then
                echo ""
                load_url "$VAGRANT_URL$VAGRANT_QA_PATH$OUTPUT_FILE"    
            fi

            exit
            ;;
        -v|--view)
            echo "$OUTPUT_PATH/$OUTPUT_FILE"
            if [ -f "$OUTPUT_PATH/$OUTPUT_FILE" ]
            then
                load_url "$VAGRANT_URL$VAGRANT_QA_PATH$OUTPUT_FILE"
            else
                usage
                echo "$OUTPUT_FILE doesn't exist yet.  Please run with -s first"
            fi
            exit
            ;;
        -h|--help)
            usage
            exit
            ;;

    esac
    shift
done
## no flags detected, show usage
usage
