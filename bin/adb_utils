#!/bin/bash

## Author: Glen Morgan (glen.morgan@outlook.com)
## Date: June 24th, 2014
## Usage: adb_utils [option] arg 
## Desc: A couple utility commands that I tend to use often.

PACKAGE_FILTER="aio"
SCREEN_CAPTURE_FILENAME="adb_screen_capture.png"

function usage() {
echo "Usage: $0"
echo ""
echo ""
echo "Options:"
echo ""
echo "   -h, --help     Display this message."
echo ""
echo "   -p, --package  Locate installed packages on connected Android device"
echo "                  param: package filter"
echo "                  Note: If no param is supplied, the script will display all the \"$PACKAGE_FILTER\" packages."
echo "                  adb_utils -p launcher"
echo ""
echo "   -c, --capture  Save a screen capture"
echo "                  param: filename"
echo "                  Note: If no param is supplied, the script will save image as"
echo "                  \"$SCREEN_CAPTURE_FILENAME\""
echo "                  adb_utils -c image.png"
echo ""
echo "   -l, --log      Tail log files"
echo "                  param: filter expression"
echo "                  Note: If no param is supplied, all log entries will be displayed"
echo "                  Note: To filter by multiple strings, separate with '|' and wrap search term with"
echo "                        single quotes '"
echo "                  adb_utils -l tv.aio.android.launcher|glmorgan"
echo ""
echo "    -r, --remove  Remove a system installed apk"
echo "                  This is used when removing firmware installed system apks"
echo "                  If no apk is passed, you will be prompted for it"
echo "                  usage: adb_utils -r Calendar.apk"
echo "                  usage: adb_utils -r"
echo ""
echo ""
}

while [[ $# -gt 0 ]]; do
    case $1 in
        -h|--help)
            usage
            exit
            ;;
        -p|--package)
            if [[ ! -z $2 ]]
            then
                PACKAGE_FILTER=$2
            fi
            echo "Executing command"
            echo "\"adb shell pm list packages -f | grep $PACKAGE_FILTER | cut -d= -f2-\""
            echo ""
            adb shell pm list packages -f | grep $PACKAGE_FILTER | cut -d= -f2- 
            echo ""
            exit
            ;;
        -c|--capture)
            if [[ ! -z $2 ]]
            then
                SCREEN_CAPTURE_FILENAME=$2
            fi
            adb shell screencap -p | perl -pe 's/\x0D\x0A/\x0A/g' > "$SCREEN_CAPTURE_FILENAME"
            
            # Prompt user to view
            echo "Screen captured saved as $SCREEN_CAPTURE_FILENAME"
            read -p "Enter 'y' to view, 'n' to exit... " -n 1

            if [[ $REPLY =~ ^[Yy]$ ]]; then
                 open "$SCREEN_CAPTURE_FILENAME"
            fi

            exit
            ;;

        -l|--log)
            if [[ ! -z $2 ]]
            then
                tail -f | adb logcat | grep -E $2
            else
                tail -f | adb logcat
            fi
            exit
            ;;
        -r|--remove)
            adb shell mount -o rw,remount ubi0_0 /system
            if [[ ! -z $2 ]];
            then
                apk=$2
            else
                read -p "Enter name of apk: " $REPLY
                if [[ $REPLY ]]; then
                apk=$REPLY
                fi
            fi

            if [ $apk ];
            then
                result=$(adb shell rm /system/app/$apk)
                echo $result
                echo "Reboot required to complete uninstall"
                read -n1 -p "Reboot now (y/n): " REBOOT 
                if [[ $REBOOT =~ ^[Yy]$ ]]; then
                    echo ""
                    echo "Rebooting device..."
                    adb reboot
                fi
            else
                echo "Now run the following command to uninstall the apk"
                echo "adb shell rm /system/app/[name of apk].apk"
            fi
            exit
            ;;

    esac

done
usage
